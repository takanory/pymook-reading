================================================
 第5回 環境構築の自動化、活躍の場が広がるPython
================================================

.. contents:: 目次
   :local:

はじめに
========
鈴木たかのりです。

`前回 <http://gihyo.jp/news/report/01/python-training-book-reading-club/0004>`_
に引き続き
`Pythonエンジニア養成読本 <http://gihyo.jp/book/2015/978-4-7741-7320-7>`_
という書籍の `読書会イベント <http://pymook.connpass.com/>`_ についてレポートします。今回が最終回です。

`第5回の読書会 <http://pymook.connpass.com/event/19107/>`_ は9月17日(木)に `アライドアーキテクツ株式会社 <http://www.aainc.co.jp/>`_ の会議室で開催されました。

当日はだいたい以下のタイムテーブルで進めました。

- 19:00-19:15 参加者の自己紹介
- 19:15-21:00 「第6章 環境構築の自動化」
- 21:00-22:00 ビアバッシュ(ビールとピザでの参加者懇親会)

今回も今までと同様に書籍の読みあわせはせず、ページ数の関係で削ったところや、出版後の追加情報を中心に解説を行いました。

自己紹介
========
- ハード関連興味あり
- Ansibleミートアップ参加した。違う角度の話が聞けるかな
- らくのさん、2回めから。Ansibleは試しに使ったら便利だった。
- よしだ: 初参加。Ansibleは仕事、趣味で使えそうかなと思ったので聞きに来た。
- あべ: 3回目、会社ではChef使っている。Ansibleもミートアップとか参加しているので、切り替えたいかなと思っている
- はやし: 撮影しにきたよ

- せきね: 5章担当。Ansible業務で使っているので楽しみ。
- きよはら: 2章担当。仕事でもAnsible使っているので質問したい
- たかつか: 前回参加した。Ansibleは経験ないけど運用管理で使えればなと思っている。Chefは使っている
- むた: 3回め参加。普段はiOSやっている。Ansibleは新卒の研修で少しさわった。
- しまだ: 3章担当。Ansibleは環境構築の知見を聞きたいなと思っている

第6章 環境構築の自動化
======================
わかやまさんの自己紹介

環境構築の章を書いた。普段はGoを書いていてPythonは書いていない。以前はPython書いていた。
Webアプリの開発から運用までやっているのでAnsibleも使っている。

入門Ansibleという本を出している。それがあって声がかかった。

Ansibleは普通に使う分にはPythonは使わないが、Ansibleの拡張を書くときにはPythonが必要となる。

資料を準備していないというぐだぐだなスタートから開始ww

6-1 環境構築をなぜ自動化すべきか
--------------------------------
環境構築の自動化のメリットについて最初に伝えた。

PDFの表示に困るr_rudi。

台数がどんどん増えていくと手作業だと失敗するので、自動化は必要だよね。
ここの話はAnsibleじゃなくてChefだったりPuppetだったりでもよい。

ここの図(のせる)はAnsibleを想定していて、対象サーバーにエージェントを入れなくていいのでChefとかとは違う。

最近SIerからもAnsible使いたいって話がよく聞かれる。Chefはエージェントを入れないといけないため、Ansibleが向いている。

- Q: Ansible以外にsshだけあればいいのあるの?
- A: 今はChefとかSolt stackもエージェントなしでもいけるようにしてきている。途中から思想を変えてきた。最初から設計がssh前提のAnsibleの方が筋がいい

リポジトリはなくても環境構築はできるが、あったほうが絶対にいい。
過去の履歴が残るので、しくじったときに戻すときにもどこが変わったかもわかるし、もとに戻すことも簡単。

- Q: Windowsとかでは使われない?
- A: WindowsはWinRM?っていうプロトコルがあるので、使える。Windowsサーバーの場合はPowerShellを実行する。まだ洗練はされていない
- Q: Chefみたいなエージェントを入れる場合ってどういうのが多いのか?
- A: エージェントをいれる意味はあまりなさそう。sshが通らない場合とかはエージェント経由じゃないとだめかも。AnsibleにもAnsible pullというコマンドがついていて、cronで最新のを自分で適用するみたいな使い方をスルガ、エージェントっぽい使い方もできる

6-2 Ansibleの導入
-----------------
Ansibleのインストールはpipでインストールしようって書いているが、Linuxだとパッケージ管理でインストールできる。
pipでインストールすると依存ライブラリが入らないため、パッケージ管理で入れたほうがいいかも。

ColumnでPython3系への対応と書いているが、もうすぐAnsible 2がリリースされるがPython 3対応はしていない。
準備は進めており、python 3 対応のPRを受け入れている状況。

- tasksの中にタスクを入れる
- YAMLの中にjinja2のテンプレートで変数が入れられる。
- playbookはtaskを積み重ねて構築する
- taskには名前を日本語で書けるので、日本語で書くのオススメ

本だと白黒なんだけど実際はCHANGESは黄色でOKは緑になる

何回実行しても同じ状態になることを「冪等性」という。これが環境構築だと大事。

AnsibleだとちょっとずつPlaybookを継ぎ足しながら環境を構築していくので便利。冪等性があるので、同じことを繰り返しても大丈夫。

- Q: Ansible Playbookでハイフンが入っていたり、入ってないのとかがあるが、これはなに?
- A: これはYAMLのフォーマットのため。ハイフンがリスト、:で区切っているのがdict
- Q: nameに日本語を書いているが文字コードは?
- A: utf-8しか使えない。以前は日本語使えなかったが Pull Request を送ってutf-8を通るようにしてもらった。ほとんどの個所では日本語は使えるはず。
- A: 一箇所だけ、debug printの最中に日本語を入れようとすると、変数を展開するときに日本語が通じないところがある。もしかしたら Ansible 2.0 で解消しているかもしれない

sudo はいまは become って名前に統一された

- Q: 運用をしている人はどれくらいいます?
- A: 2人くらい。構築までで運用はしない人もいる。構築は手作業でやっている。台数は一桁。

こうちく1回だけで一桁なのであれば、手でやってもよいと思うが、長く運用する場合はAnsibleなどのツールがほしくなる。

昔はCluster SSHで複数のホストに同じコマンドを送ったりしていた。
  
6-3 少し高度な使い方
--------------------
- with_items
- with_itemsのループだとシンプルなループ処理しかできない
- 複雑なループを書きたい場合はPythonで書く必要がある。Pluginを書いて組み込む
- fileモジュールを拡張することとかもできる

Pluginの書き方は「入門Ansible」に書いてある!!

- when
  
Ansibleを実行すると、対象のサーバーに入って情報を収集する。ディストリビューションとバージョン、カーネルのバージョン、IPアドレス等々。その情報を利用して条件分岐ができる。「CentOS 6ならこれを実行する」みたいなこともできる。

- roles

rolesは大事な機能で、これを使いこなせるとAnsibleが上手に使える。しかし紙面ではあんまり触れていない。

組み合わせでroleをうまく使おう。

書籍では ansible-galaxy から role を取得して使っている。

実際に運用でもansible-galaxyで探して使っている。対応しているplatformとかで絞られるので、だいたい決まってくる。Linuxのdistributionが違う場合は、githubでforkして自分で修正したりとかもできる。

- register

  モジュールが実行した結果を変数に保存する。

- local_action

  Ansibleを実行している管理サーバー側で実行するもの。
  EC2のインスタンスを立ち上げたりするとかは、Ansibleの管理サーバー側で行うと思うので、そういうときに使う。

Ansibleでクラウド操作ができる。

ec2とかtagつける、snapshotとる、route53にゾーンつける、Azure, Digital Oceanとかも使える。などなど、クラウドサービス対応が沢山ある。
これらのコマンドは管理サーバー側でやるのが普通かな。

AWSをシェフで構築するツールCloudFormation+OpsWorksを使うっていうのがAWS側が提供している考え方。
それと同じことはAnsibleだけでできる。

- Q: AWS使う時の管理サーバーはローカルでやるのか、AWS上でやるのか?
- A: どっちもあり。みんなが入って使えるAnsible実行ホストを用意するという手もある

- Q: rolesの切り方とか変数の置き方に悩まないか
- A: あまりない。rolesの切り方をミスるとそういうことがおきる。ロールはアプリとかミドルウェアごとに作る。ロールの中だけで完結するようにする。role dependency は使っていない、使わない方がいい。AロールはBロールに依存しているという風に書ける、そのように書くと勝手に実行されて便利だが、なにが実行されているか見えなくなるのであまり好きじゃない。Ansibleは実行順序をかけるので、自分で明示する方がいい。

role dependency は ansible-galaxy のために作られたもの

- Q: 開発環境、ステージング環境ごとに中身が違うみたいなことってどうするの?
- A: 変数で切り替えるのがよい。条件付き実行を使って、productionならそれ用の変数を読み込むという指定をする。modeでproduction/stagingを切り替えている
- Q: クラウド用のコマンドを抽象化したようなものとかないかな
- A: 今のところはない。それぞれのサービスが提供する機能が違うため。共通化すると設定できることが少なくなりそう。

- ディストリビューションのパッケージのインストールはAnsibleはyum, aptと分かれている。packageに統一してという話も出ているが、統一されていない。インストールするパッケージ名がapache2/httpd2のように異なるため分けている。

6-4 よく使うモジュール
----------------------
一番知ってほしいのはscriptモジュール。
scriptモジュールがあれば今あるscriptを使える。
script実行時にcreates引数をつけることによって、一回だけ実行されるスクリプトになる。これで簡易的に冪等性があるといえることになる。

shellモジュールは普通にshellとしてコマンドが実行できる。

ver 1.9で260、ver 2.0で400くらいのモジュールがある。
何かしたいなーと思ったら、docs.ansible.comを検索してモジュールを探す。

Ansibleはbetter shell scriptだと思っている。
分散して、書き方が統一できて、複数サーバー実行して、冪等性もあるというイメージ。

- Q: すべての構成をAnsibleでやるとかいう考えは?
- A: とくにない。

Ansible使ってshellモジュールで実行したりとかもやる。

- Q: Dockerとk8sっていうのとAnsibleとかを使い分けたらいいの?Capstranoとかともまた違うの?Ansibleの使いドコロってどこなんだろう?
- A: 自動化ツールとして2系統がある。configration management tool(構成管理ツール)chef, puppet等、orchestration tool(リモート実行ツール)capistrano, fabricとか。Ansibleは両方できるのが売りになっている。
  Simple, Agentless, Powerful
  AnsibleよりDockerがいいと思っていて、Ansibleは過渡期に使われるものと考えている。Dockerの方が筋がいいと思っている。
  3年後とかになるとDockerで速いみたいなのがあるかも知れない。Ansibleは現実。

- Q: Ansible.comってどうやって食べてるの?
- A: Ansible社の人がメインで公開で開発している。Ansible社はAnsible Towerというものを売っている。Web画面から実行したり、Webhookで実行するとかのいろんな機能が付いている。他はトレーニングとかコンサルティングとかをやっている。使ったことはない。
  Ansible Tower
- Q: オーケストレーションができるとあったが、複数サーバー間の連携とかできるのか?
- A: シリアル実行でやればいいかな
- Q: Playbookのファイルをリポジトリで管理するのが望ましい。リポジトリはどこがいい?
- A: Gitとかで github でもいいし社内のgitサーバーでもいいと思っている
- Q: sshの秘密鍵の管理とかどうしてる?
- A: ファイルについては分けておいたほうがよい。パスワード、Tokenとかの情報をPlaybookに書きたい場合がある。Ansible vaultという機能がある。暗号化してPlaybookに書き込み、実行時にパスワードを入力すると復号化して実行するみたいなこともできる
- A: HashiCorpのXXXってやつも秘密情報持てるので、それと連携するのはよいかも

Appendix2 ますます活躍の場が広がるPython
========================================
ここはざっと説明して終了

ビアバッシュ(懇親会)
====================
- ansible の cow say
- コードゴルフ→

まとめ
======
